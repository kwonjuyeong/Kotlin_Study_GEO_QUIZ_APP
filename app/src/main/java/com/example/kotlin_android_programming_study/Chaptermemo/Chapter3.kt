package com.example.kotlin_android_programming_study.Chaptermemo

/*
/* Chapter3*/
액티비티 생명주기

액티비티는 네 가지 상태
Resumed, Paused, Stopped, nonexistent로 상호 전환된다.

    존재하지 않음
onCreate   onDestroy
        중단
OnStart    OnStop
      일시중지
OnResume   OnPause
      실행재개

존재하지 않음 : 액티비티가 런칭 전이거나 소멸되었음을 나타낸다, 이 때 액티비티 인스턴스는 메모리에 존재하지 않고 사용자가 보거나 상호작용 할 뷰도 없다.
중단 : 액티비티 인스턴스가 메모리에 있지만, 화면에서 볼 수 없다는 것을 나타낸다. 전체화면을 사용하는 다른 액티비티를 사용자가 시작하거나 홈 버튼을 누를 때 등의 상태이다.
일시 중지 : 액티비티가 포그라운드에서 작동하지는 않지만, 액티비티 인스턴스의 뷰 전체 또는 일부를 화면에서 볼 수 있음을 나타낸다.(대화상자나 투명 액티비티 등)
실행 재개 : 액티비티가 메모리에 있으면서 화면에서 전체를 볼 수 있고, 포그라운드에 있음을 나타낸다. 실행재개 상태는 전체 시스템에 걸쳐 하나의 액티비티만 될 수 있다.
한 액티비티가 "실행 재개" 상태가 되면 직전에 실행중이던 액티비티는 다른 상태로 바뀌게 된다.


장치 회전 시
- 액티비티 인스턴스가 Stop -> Destroy -> OnCreate -> Start -> Resume 상태로 변한다.
이유는 장치를 회전하게 되면 "장치구성"이 변경된다.
장치구성이란 화면 방향, 화면 밀도, 화면 크기, 키보드 타입, 도크모드, 언어 등 장치의 현재 상태를 나타내는 특성들의 집합이다.

안드로이드는 현재 액티비티 인스턴스를 소멸시키고 새로운 구성에 가장 적합한 리소스를 찾기 때문에 Destroy 후 새로운 인스턴스를 Start 하는것이다.

=======================================================================================================
Chapter 3 Challenge
- 정답 맞춘 문제를 건너뛰기(정답을 맞춘 문제를 다시 볼 떄 TRUE와 FALSE버튼을 비활성화해 다시 답을 하지 않아도 되게 해보자)
해결 방법 : 정답을 맞추면 ArrayList에 currentIndex 값을 add해주고 ArrayList.contain을 이용해 현재 currentIndex가 ArrayList안에 포함되어 있으면
버튼을 비활성화 해주는 방식을 사용했다
- 점수 보여주기(사용자가 모든 문제에 대해 답을 한 후에 Toast로 점수를 백분율로 보여주자)
해결 방법 : 정답을 저장할 변수 correct를 선언한 후 정답을 맞출때마다 1씩 더해준다. questionlist.size를 통해 문제의 총 갯수를 구한 후 currentIndex+1이 questionlist.size와 같을 때 정답 갯수를 문제 리스트 길이로 나눠준 Float값을 Toast로 띄어준다.
========================================================================================================
한줄평 : 야근하고 와서 공부시간이 부족했지만 챌린지도 잘 풀렸고, 로또 앱도 간단하게 10분도 안걸려서 만들었다.(사실 친구랑 로또 얘기하다가 갑자기 생각나서 급하게 짜서 친구한테 보여줬다)

 */