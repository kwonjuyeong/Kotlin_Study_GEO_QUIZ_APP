package com.example.kotlin_android_programming_study.Chaptermemo

/*
/* Chapter4*/
안드로이드 앱의 디버깅

앱에 결함이 있을 때 어떻게 해야할까?
1. Logcat
2. Lint
3. Debugger

1. Logcat
앱에 결함이 생겼을 때
장치가 멈추거나 작동이 되지 않을때 안드로이드 스튜디오 하단 테두리에 있는 Logcat 도구 버튼을 클릭해 Logcat에서 에러를 찾아 볼 수 있다.
빨간색 에러 메시지가 안드로이드 런타임 예외 메시지를 뜻한다.
에러메시지는 검색할 수도 있고, 로그 레벨 드롭다운에서 로그 레벨을 선택할 수 있다.
- 로그로 결함을 찾는 것은 앱이 실행중지 상태로 앱이 종료되었을 때 유용하다.
하지만 예외를 발생하지 않고 오작동으로 인한 에러라면 중단점(break point)을 찾아야한다.

이럴때 사용하는 것이 스택 기록의 인한 진단 로깅과 디버거를 사용한 중단점 설정이다.

2. 로깅
Log.d(String, String, Throwable)
Log.d(TAG, "Update",  Exception())
Log.d(this, "error")
이렇게 코드에서 로그를 찍어 에러가 어디서 발생했는지 찾는 방식을 로깅 방식이라고 한다.

3. 디버거
맨 왼쪽 영역의 회색 바를 클릭하면 빨간색의 작은 원이 나타나게 되는데 이것을 중단점(break point)라고 한다.
(koltin line break point) Cnt + 8을 눌러도 중단점을 지정/해제할 수 있다.

디버거가 중단점을 처리하게 하려면 앱을 일반 실행모드가 아닌 디버깅 모드로 실행해야한다.
Run -> Debug APP을 눌러 실행한다.
디버깅 모드로 실행을 시켜보게 되면 중단점까지 코드를 실행시키고 확인하고 다음 중단점까지 실행시키면서 코드의 에러를 확인 할 수 있다.


4. Lint
리소스와 같이 안드로이드 특유의 문제들을 접할 경우 Lint를 쓰는 것이 유용하다.
Lint는 안드로이드 코드의 정적 분석기이다.
정적 분석기란 앱을 실행하지 않고 코드를 검사해 결함을 찾는 프로그램을 뜻한다.
Lint는 안드로이드 프레임워크에 관한 자신의 지식을 이용해 사전에 코드를 더 깊이 있게 살펴보고, 컴파일러가 알 수 없는 문제를 찾는다.

안드로이드 스튜디오 메뉴바 Analyze -> Inspect Code -> Whole project를 선택하고 Ok버튼을 클릭하면 Lint 검사를 실행하게 된다.








 */