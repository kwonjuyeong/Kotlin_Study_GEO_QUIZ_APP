package com.example.kotlin_android_programming_study.Chaptermemo

/*
/* Chapter2*/
MVC Model
안드로이드 API는 모델-뷰-컨트롤러라는 아키텍처에 맞춰 설계되었다.

Model
1. 앱의 데이터와 비즈니스 로직을 가진다.
2. 앱과 관계가 있는 것들을 모델링한다.
3. 데이터를 보존하고 관리하는 것이 목적이다.

View
1. 사용자의 입력에 응답하는 방법이다.
2. 화면에서 보이는 것들을 View라고 한다.
3. 안드로이드에서 제공하는 View 클래스들이 있지만 직접 커스텀 할 수 있다.

Controller
1. 뷰와 모델 객체를 결속하는 중간다리 역할을 한다.
2. 앱의 로직을 포함한다.
3. 컨트롤러 객체는 뷰 객체에 의해 촉발되는 다양한 이벤트에 응답하고 모델 객체 및 뷰 계층과 주고받는 데이터의 흐름을 관리한다.
4. 일반적으로 Activity나 Fragment의 서브 클래스를 뜻한다.

- MVC 모델의 단점 : 크고 복잡한 앱에서 컨트롤러의 계층이 커지거나 복잡해질 수 있다.
액티비티나 다른 컨트롤러드를 가볍게 유지하고 비즈니스 로직을 적게 포함하는 것이 좋다.
-> 대안 : MVVM Model
=======================================================================================================
Chapter 2 Challenge
- TextView에 리스너 추가하기 ㅇ
- Previous 버튼 추가하기 ㅇ
- ImageButton으로 깔끔한 UI만들기 ㅇ
========================================================================================================
한줄평 : 기초 중에 기초 중에 기초를 다시 다지며 기본기를 닦자
 */